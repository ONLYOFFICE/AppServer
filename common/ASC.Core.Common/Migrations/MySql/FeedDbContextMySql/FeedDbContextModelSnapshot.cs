// <auto-generated />
using System;
using ASC.Core.Common.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace ASC.Core.Common.Migrations.MySql.FeedDbContextMySql
{
    [DbContext(typeof(MySqlFeedDbContext))]
    partial class FeedDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ASC.Core.Common.EF.Model.FeedAggregate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(88)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("AggregateDate")
                        .HasColumnName("aggregated_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnName("author")
                        .HasColumnType("char(38)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("varchar(70)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnName("json")
                        .HasColumnType("mediumtext")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Keywords")
                        .HasColumnName("keywords")
                        .HasColumnType("text")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("modified_by")
                        .HasColumnType("char(38)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnName("module")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnName("product")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Tenant", "AggregateDate")
                        .HasName("aggregated_date");

                    b.HasIndex("Tenant", "ModifiedDate")
                        .HasName("modified_date");

                    b.HasIndex("Tenant", "Product")
                        .HasName("product");

                    b.ToTable("feed_aggregate");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.FeedLast", b =>
                {
                    b.Property<string>("LastKey")
                        .HasColumnName("last_key")
                        .HasColumnType("varchar(128)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("LastDate")
                        .HasColumnName("last_date")
                        .HasColumnType("datetime");

                    b.HasKey("LastKey")
                        .HasName("PRIMARY");

                    b.ToTable("feed_last");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.FeedReaded", b =>
                {
                    b.Property<int>("Tenant")
                        .HasColumnName("tenant_id")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("varchar(38)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Module")
                        .HasColumnName("module")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnName("timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("Tenant", "UserId", "Module")
                        .HasName("PRIMARY");

                    b.ToTable("feed_readed");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.FeedUsers", b =>
                {
                    b.Property<string>("FeedId")
                        .HasColumnName("feed_id")
                        .HasColumnType("varchar(88)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("char(38)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("FeedId", "UserId")
                        .HasName("PRIMARY");

                    b.HasIndex("UserId")
                        .HasName("user_id");

                    b.ToTable("feed_users");
                });
#pragma warning restore 612, 618
        }
    }
}
