// <auto-generated />
using System;
using ASC.Core.Common.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ASC.Core.Common.Migrations.Npgsql.UserDbContextNpgsql
{
    [DbContext(typeof(PostgreUserDbContext))]
    [Migration("20200929102402_UserDbContextNpgsql")]
    partial class UserDbContextNpgsql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ASC.Core.Common.EF.Acl", b =>
                {
                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.Property<Guid>("Subject")
                        .HasColumnName("subject")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<Guid>("Action")
                        .HasColumnName("action")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<string>("Object")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("object")
                        .HasColumnType("character varying(255)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(255);

                    b.Property<int>("AceType")
                        .HasColumnName("acetype")
                        .HasColumnType("integer");

                    b.HasKey("Tenant", "Subject", "Action", "Object")
                        .HasName("core_acl_pkey");

                    b.ToTable("core_acl","onlyoffice");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.DbGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<Guid?>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("categoryid")
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(38);

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified")
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<Guid?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("parentid")
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(38);

                    b.Property<bool>("Removed")
                        .HasColumnName("removed")
                        .HasColumnType("boolean");

                    b.Property<string>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sid")
                        .HasColumnType("character varying(512)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(512);

                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LastModified")
                        .HasName("last_modified");

                    b.HasIndex("Tenant", "ParentId")
                        .HasName("parentid");

                    b.ToTable("core_group","onlyoffice");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.DbSubscriptionMethod", b =>
                {
                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnName("source")
                        .HasColumnType("character varying(38)")
                        .HasMaxLength(38);

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Recipient")
                        .HasColumnName("recipient")
                        .HasColumnType("character varying(38)")
                        .HasMaxLength(38);

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnName("sender")
                        .HasColumnType("character varying(1024)")
                        .HasMaxLength(1024);

                    b.HasKey("Tenant", "Source", "Action", "Recipient")
                        .HasName("core_subscriptionmethod_pkey");

                    b.ToTable("core_subscriptionmethod","onlyoffice");

                    b.HasData(
                        new
                        {
                            Tenant = -1,
                            Source = "asc.web.studio",
                            Action = "send_whats_new",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6504977c-75af-4691-9099-084d3ddeea04",
                            Action = "new feed",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6a598c74-91ae-437d-a5f4-ad339bd11bb2",
                            Action = "new post",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "853b6eb9-73ee-438d-9b09-8ffeedf36234",
                            Action = "new topic in forum",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "9d51954f-db9b-4aed-94e3-ed70b914e101",
                            Action = "new photo uploaded",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "28b10049-dd20-4f54-b986-873bc14ccfc7",
                            Action = "new bookmark created",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "742cf945-cbbc-4a57-82d6-1600a12cf8ca",
                            Action = "new wiki page",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "37620ae5-c40b-45ce-855a-39dd7d76a1fa",
                            Action = "BirthdayReminder",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6fe286a4-479e-4c25-a8d9-0156e332b0c0",
                            Action = "sharedocument",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6fe286a4-479e-4c25-a8d9-0156e332b0c0",
                            Action = "sharefolder",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6fe286a4-479e-4c25-a8d9-0156e332b0c0",
                            Action = "updatedocument",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "invitetoproject",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "milestonedeadline",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "newcommentformessage",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "newcommentformilestone",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "newcommentfortask",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "projectcreaterequest",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "projecteditrequest",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "removefromproject",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "responsibleforproject",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "responsiblefortask",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6045b68c-2c2e-42db-9e53-c272e814c4ad",
                            Action = "taskclosed",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "40650da3-f7c1-424c-8c89-b9c115472e08",
                            Action = "calendar_sharing",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "40650da3-f7c1-424c-8c89-b9c115472e08",
                            Action = "event_alert",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "asc.web.studio",
                            Action = "admin_notify",
                            Recipient = "cd84e66b-b803-40fc-99f9-b2969a54a1de",
                            Sender = "email.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "SetAccess",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "ResponsibleForTask",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "AddRelationshipEvent",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "ExportCompleted",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "CreateNewContact",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Sender = "email.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "ResponsibleForOpportunity",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Sender = "email.sender|messanger.sender"
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "asc.web.studio",
                            Action = "periodic_notify",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Sender = "email.sender"
                        });
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Subscription", b =>
                {
                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnName("source")
                        .HasColumnType("character varying(38)")
                        .HasMaxLength(38);

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Recipient")
                        .HasColumnName("recipient")
                        .HasColumnType("character varying(38)")
                        .HasMaxLength(38);

                    b.Property<string>("Object")
                        .HasColumnName("object")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("Unsubscribed")
                        .HasColumnName("unsubscribed")
                        .HasColumnType("boolean");

                    b.HasKey("Tenant", "Source", "Action", "Recipient", "Object")
                        .HasName("core_subscription_pkey");

                    b.ToTable("core_subscription","onlyoffice");

                    b.HasData(
                        new
                        {
                            Tenant = -1,
                            Source = "asc.web.studio",
                            Action = "send_whats_new",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6504977c-75af-4691-9099-084d3ddeea04",
                            Action = "new feed",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6a598c74-91ae-437d-a5f4-ad339bd11bb2",
                            Action = "new post",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "853b6eb9-73ee-438d-9b09-8ffeedf36234",
                            Action = "new topic in forum",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "9d51954f-db9b-4aed-94e3-ed70b914e10",
                            Action = "new photo uploaded",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "28b10049-dd20-4f54-b986-873bc14ccfc7",
                            Action = "new bookmark created",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "742cf945-cbbc-4a57-82d6-1600a12cf8ca",
                            Action = "new wiki page",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "37620ae5-c40b-45ce-855a-39dd7d76a1fa",
                            Action = "BirthdayReminderd",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6fe286a4-479e-4c25-a8d9-0156e332b0c0",
                            Action = "sharedocument",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "6fe286a4-479e-4c25-a8d9-0156e332b0c0",
                            Action = "sharefolder",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "40650da3-f7c1-424c-8c89-b9c115472e08",
                            Action = "calendar_sharing",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "40650da3-f7c1-424c-8c89-b9c115472e08",
                            Action = "event_alert",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "asc.web.studio",
                            Action = "admin_notify",
                            Recipient = "cd84e66b-b803-40fc-99f9-b2969a54a1de",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "SetAccess",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "ResponsibleForTask",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "AddRelationshipEvent",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "ExportCompleted",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "CreateNewContact",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "13ff36fb-0272-4887-b416-74f52b0d0b02",
                            Action = "ResponsibleForOpportunity",
                            Recipient = "abef62db-11a8-4673-9d32-ef1d8af19dc0",
                            Object = "",
                            Unsubscribed = false
                        },
                        new
                        {
                            Tenant = -1,
                            Source = "asc.web.studio",
                            Action = "periodic_notify",
                            Recipient = "c5cc67d1-c3e8-43c0-a3ad-3928ae3e5b5e",
                            Object = "",
                            Unsubscribed = false
                        });
                });

            modelBuilder.Entity("ASC.Core.Common.EF.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<int>("ActivationStatus")
                        .HasColumnName("activation_status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnName("bithdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Contacts")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("contacts")
                        .HasColumnType("character varying(1024)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreateOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_on")
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Culture")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("culture")
                        .HasColumnType("character varying(20)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email")
                        .HasColumnType("character varying(255)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime>("LastModified")
                        .HasColumnName("last_modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Location")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("location")
                        .HasColumnType("character varying(255)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(255);

                    b.Property<string>("Notes")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("notes")
                        .HasColumnType("character varying(512)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(512);

                    b.Property<string>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("phone")
                        .HasColumnType("character varying(255)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(255);

                    b.Property<int>("PhoneActivation")
                        .HasColumnName("phone_activation")
                        .HasColumnType("integer");

                    b.Property<bool>("Removed")
                        .HasColumnName("removed")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Sex")
                        .HasColumnName("sex")
                        .HasColumnType("boolean");

                    b.Property<string>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sid")
                        .HasColumnType("character varying(512)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(512);

                    b.Property<string>("SsoNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sso_name_id")
                        .HasColumnType("character varying(512)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(512);

                    b.Property<string>("SsoSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sso_session_id")
                        .HasColumnType("character varying(512)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(512);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("1");

                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TerminatedDate")
                        .HasColumnName("terminateddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title")
                        .HasColumnType("character varying(64)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(64);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("WorkFromDate")
                        .HasColumnName("workfromdate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .HasName("email");

                    b.HasIndex("LastModified")
                        .HasName("last_modified_core_user");

                    b.HasIndex("UserName", "Tenant")
                        .HasName("username");

                    b.ToTable("core_user","onlyoffice");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66faa6e4-f133-11ea-b126-00ffeec8b4ef"),
                            ActivationStatus = 0,
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "",
                            FirstName = "Administrator",
                            LastModified = new DateTime(2020, 9, 29, 10, 24, 2, 21, DateTimeKind.Utc).AddTicks(9794),
                            LastName = "",
                            PhoneActivation = 0,
                            Removed = false,
                            Status = 1,
                            Tenant = 1,
                            UserName = "administrator",
                            WorkFromDate = new DateTime(2020, 9, 29, 10, 24, 2, 21, DateTimeKind.Utc).AddTicks(8943)
                        });
                });

            modelBuilder.Entity("ASC.Core.Common.EF.UserGroup", b =>
                {
                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<Guid>("GroupId")
                        .HasColumnName("groupid")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<int>("RefType")
                        .HasColumnName("ref_type")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_modified")
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Removed")
                        .HasColumnName("removed")
                        .HasColumnType("boolean");

                    b.HasKey("Tenant", "UserId", "GroupId", "RefType")
                        .HasName("core_usergroup_pkey");

                    b.HasIndex("LastModified")
                        .HasName("last_modified_core_usergroup");

                    b.HasIndex("UserId");

                    b.ToTable("core_usergroup","onlyoffice");

                    b.HasData(
                        new
                        {
                            Tenant = 1,
                            UserId = new Guid("66faa6e4-f133-11ea-b126-00ffeec8b4ef"),
                            GroupId = new Guid("cd84e66b-b803-40fc-99f9-b2969a54a1de"),
                            RefType = 0,
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Removed = false
                        });
                });

            modelBuilder.Entity("ASC.Core.Common.EF.UserPhoto", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userid")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnName("photo")
                        .HasColumnType("bytea");

                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("core_userphoto_pkey");

                    b.HasIndex("Tenant")
                        .HasName("tenant_core_userphoto");

                    b.ToTable("core_userphoto","onlyoffice");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.UserSecurity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("uuid")
                        .HasMaxLength(38);

                    b.Property<string>("PwdHash")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pwdhash")
                        .HasColumnType("character varying(512)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(512);

                    b.Property<string>("PwdHashSha512")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pwdhashsha512")
                        .HasColumnType("character varying(512)")
                        .HasDefaultValueSql("NULL")
                        .HasMaxLength(512);

                    b.Property<int>("Tenant")
                        .HasColumnName("tenant")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("core_usersecurity_pkey");

                    b.HasIndex("PwdHash")
                        .HasName("pwdhash");

                    b.HasIndex("Tenant")
                        .HasName("tenant_core_usersecurity");

                    b.ToTable("core_usersecurity","onlyoffice");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("66faa6e4-f133-11ea-b126-00ffeec8b4ef"),
                            PwdHash = "vLFfghR5tNV3K9DKhmwArV+SbjWAcgZZzIDTnJ0JgCo=",
                            PwdHashSha512 = "USubvPlB+ogq0Q1trcSupg==",
                            Tenant = 1
                        });
                });

            modelBuilder.Entity("ASC.Core.Common.EF.UserGroup", b =>
                {
                    b.HasOne("ASC.Core.Common.EF.User", null)
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASC.Core.Common.EF.UserSecurity", b =>
                {
                    b.HasOne("ASC.Core.Common.EF.User", null)
                        .WithOne("UserSecurity")
                        .HasForeignKey("ASC.Core.Common.EF.UserSecurity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
